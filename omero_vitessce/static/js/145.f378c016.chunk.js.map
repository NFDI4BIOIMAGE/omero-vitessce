{"version":3,"file":"static/js/145.f378c016.chunk.js","mappings":"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","sources":["../node_modules/vitessce/dist/lerc-BjkeNola.js"],"sourcesContent":["import { i as sA } from \"./pako.esm-D68R8YXe.js\";\nimport { g as DA, aP as nA, aQ as fA, aR as gA } from \"./index-DgZRz_Jg.js\";\nvar BA = { exports: {} }, iA;\nfunction tA() {\n  return iA || (iA = 1, function(j) {\n    /* Copyright 2015-2021 Esri. Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 @preserve */\n    (function() {\n      var J = function() {\n        var u = {};\n        u.defaultNoDataValue = -34027999387901484e22, u.decode = function(I, a) {\n          a = a || {};\n          var Q = a.encodedMaskData || a.encodedMaskData === null, g = E(I, a.inputOffset || 0, Q), D = a.noDataValue !== null ? a.noDataValue : u.defaultNoDataValue, B = L(\n            g,\n            a.pixelType || Float32Array,\n            a.encodedMaskData,\n            D,\n            a.returnMask\n          ), C = {\n            width: g.width,\n            height: g.height,\n            pixelData: B.resultPixels,\n            minValue: B.minValue,\n            maxValue: g.pixels.maxValue,\n            noDataValue: D\n          };\n          return B.resultMask && (C.maskData = B.resultMask), a.returnEncodedMask && g.mask && (C.encodedMaskData = g.mask.bitset ? g.mask.bitset : null), a.returnFileInfo && (C.fileInfo = d(g), a.computeUsedBitDepths && (C.fileInfo.bitDepths = z(g))), C;\n        };\n        var L = function(I, a, Q, g, D) {\n          var B = 0, C = I.pixels.numBlocksX, o = I.pixels.numBlocksY, r = Math.floor(I.width / C), s = Math.floor(I.height / o), f = 2 * I.maxZError, e = Number.MAX_VALUE, i;\n          Q = Q || (I.mask ? I.mask.bitset : null);\n          var t, F;\n          t = new a(I.width * I.height), D && Q && (F = new Uint8Array(I.width * I.height));\n          for (var S = new Float32Array(r * s), h, U, G = 0; G <= o; G++) {\n            var R = G !== o ? s : I.height % o;\n            if (R !== 0)\n              for (var w = 0; w <= C; w++) {\n                var n = w !== C ? r : I.width % C;\n                if (n !== 0) {\n                  var l = G * I.width * s + w * r, y = I.width - n, k = I.pixels.blocks[B], M, c, N;\n                  k.encoding < 2 ? (k.encoding === 0 ? M = k.rawData : (A(k.stuffedData, k.bitsPerPixel, k.numValidPixels, k.offset, f, S, I.pixels.maxValue), M = S), c = 0) : k.encoding === 2 ? N = 0 : N = k.offset;\n                  var q;\n                  if (Q)\n                    for (U = 0; U < R; U++) {\n                      for (l & 7 && (q = Q[l >> 3], q <<= l & 7), h = 0; h < n; h++)\n                        l & 7 || (q = Q[l >> 3]), q & 128 ? (F && (F[l] = 1), i = k.encoding < 2 ? M[c++] : N, e = e > i ? i : e, t[l++] = i) : (F && (F[l] = 0), t[l++] = g), q <<= 1;\n                      l += y;\n                    }\n                  else if (k.encoding < 2)\n                    for (U = 0; U < R; U++) {\n                      for (h = 0; h < n; h++)\n                        i = M[c++], e = e > i ? i : e, t[l++] = i;\n                      l += y;\n                    }\n                  else\n                    for (e = e > N ? N : e, U = 0; U < R; U++) {\n                      for (h = 0; h < n; h++)\n                        t[l++] = N;\n                      l += y;\n                    }\n                  if (k.encoding === 1 && c !== k.numValidPixels)\n                    throw \"Block and Mask do not match\";\n                  B++;\n                }\n              }\n          }\n          return {\n            resultPixels: t,\n            resultMask: F,\n            minValue: e\n          };\n        }, d = function(I) {\n          return {\n            fileIdentifierString: I.fileIdentifierString,\n            fileVersion: I.fileVersion,\n            imageType: I.imageType,\n            height: I.height,\n            width: I.width,\n            maxZError: I.maxZError,\n            eofOffset: I.eofOffset,\n            mask: I.mask ? {\n              numBlocksX: I.mask.numBlocksX,\n              numBlocksY: I.mask.numBlocksY,\n              numBytes: I.mask.numBytes,\n              maxValue: I.mask.maxValue\n            } : null,\n            pixels: {\n              numBlocksX: I.pixels.numBlocksX,\n              numBlocksY: I.pixels.numBlocksY,\n              numBytes: I.pixels.numBytes,\n              maxValue: I.pixels.maxValue,\n              noDataValue: I.noDataValue\n            }\n          };\n        }, z = function(I) {\n          for (var a = I.pixels.numBlocksX * I.pixels.numBlocksY, Q = {}, g = 0; g < a; g++) {\n            var D = I.pixels.blocks[g];\n            D.encoding === 0 ? Q.float32 = !0 : D.encoding === 1 ? Q[D.bitsPerPixel] = !0 : Q[0] = !0;\n          }\n          return Object.keys(Q);\n        }, E = function(I, a, Q) {\n          var g = {}, D = new Uint8Array(I, a, 10);\n          if (g.fileIdentifierString = String.fromCharCode.apply(null, D), g.fileIdentifierString.trim() !== \"CntZImage\")\n            throw \"Unexpected file identifier string: \" + g.fileIdentifierString;\n          a += 10;\n          var B = new DataView(I, a, 24);\n          if (g.fileVersion = B.getInt32(0, !0), g.imageType = B.getInt32(4, !0), g.height = B.getUint32(8, !0), g.width = B.getUint32(12, !0), g.maxZError = B.getFloat64(16, !0), a += 24, !Q)\n            if (B = new DataView(I, a, 16), g.mask = {}, g.mask.numBlocksY = B.getUint32(0, !0), g.mask.numBlocksX = B.getUint32(4, !0), g.mask.numBytes = B.getUint32(8, !0), g.mask.maxValue = B.getFloat32(12, !0), a += 16, g.mask.numBytes > 0) {\n              var C = new Uint8Array(Math.ceil(g.width * g.height / 8));\n              B = new DataView(I, a, g.mask.numBytes);\n              var o = B.getInt16(0, !0), r = 2, s = 0;\n              do {\n                if (o > 0)\n                  for (; o--; )\n                    C[s++] = B.getUint8(r++);\n                else {\n                  var f = B.getUint8(r++);\n                  for (o = -o; o--; )\n                    C[s++] = f;\n                }\n                o = B.getInt16(r, !0), r += 2;\n              } while (r < g.mask.numBytes);\n              if (o !== -32768 || s < C.length)\n                throw \"Unexpected end of mask RLE encoding\";\n              g.mask.bitset = C, a += g.mask.numBytes;\n            } else (g.mask.numBytes | g.mask.numBlocksY | g.mask.maxValue) === 0 && (g.mask.bitset = new Uint8Array(Math.ceil(g.width * g.height / 8)));\n          B = new DataView(I, a, 16), g.pixels = {}, g.pixels.numBlocksY = B.getUint32(0, !0), g.pixels.numBlocksX = B.getUint32(4, !0), g.pixels.numBytes = B.getUint32(8, !0), g.pixels.maxValue = B.getFloat32(12, !0), a += 16;\n          var e = g.pixels.numBlocksX, i = g.pixels.numBlocksY, t = e + (g.width % e > 0 ? 1 : 0), F = i + (g.height % i > 0 ? 1 : 0);\n          g.pixels.blocks = new Array(t * F);\n          for (var S = 0, h = 0; h < F; h++)\n            for (var U = 0; U < t; U++) {\n              var G = 0, R = I.byteLength - a;\n              B = new DataView(I, a, Math.min(10, R));\n              var w = {};\n              g.pixels.blocks[S++] = w;\n              var n = B.getUint8(0);\n              if (G++, w.encoding = n & 63, w.encoding > 3)\n                throw \"Invalid block encoding (\" + w.encoding + \")\";\n              if (w.encoding === 2) {\n                a++;\n                continue;\n              }\n              if (n !== 0 && n !== 2) {\n                if (n >>= 6, w.offsetType = n, n === 2)\n                  w.offset = B.getInt8(1), G++;\n                else if (n === 1)\n                  w.offset = B.getInt16(1, !0), G += 2;\n                else if (n === 0)\n                  w.offset = B.getFloat32(1, !0), G += 4;\n                else\n                  throw \"Invalid block offset type\";\n                if (w.encoding === 1)\n                  if (n = B.getUint8(G), G++, w.bitsPerPixel = n & 63, n >>= 6, w.numValidPixelsType = n, n === 2)\n                    w.numValidPixels = B.getUint8(G), G++;\n                  else if (n === 1)\n                    w.numValidPixels = B.getUint16(G, !0), G += 2;\n                  else if (n === 0)\n                    w.numValidPixels = B.getUint32(G, !0), G += 4;\n                  else\n                    throw \"Invalid valid pixel count type\";\n              }\n              if (a += G, w.encoding !== 3) {\n                var l, y;\n                if (w.encoding === 0) {\n                  var k = (g.pixels.numBytes - 1) / 4;\n                  if (k !== Math.floor(k))\n                    throw \"uncompressed block has invalid length\";\n                  l = new ArrayBuffer(k * 4), y = new Uint8Array(l), y.set(new Uint8Array(I, a, k * 4));\n                  var M = new Float32Array(l);\n                  w.rawData = M, a += k * 4;\n                } else if (w.encoding === 1) {\n                  var c = Math.ceil(w.numValidPixels * w.bitsPerPixel / 8), N = Math.ceil(c / 4);\n                  l = new ArrayBuffer(N * 4), y = new Uint8Array(l), y.set(new Uint8Array(I, a, c)), w.stuffedData = new Uint32Array(l), a += c;\n                }\n              }\n            }\n          return g.eofOffset = a, g;\n        }, A = function(I, a, Q, g, D, B, C) {\n          var o = (1 << a) - 1, r = 0, s, f = 0, e, i, t = Math.ceil((C - g) / D), F = I.length * 4 - Math.ceil(a * Q / 8);\n          for (I[I.length - 1] <<= 8 * F, s = 0; s < Q; s++) {\n            if (f === 0 && (i = I[r++], f = 32), f >= a)\n              e = i >>> f - a & o, f -= a;\n            else {\n              var S = a - f;\n              e = (i & o) << S & o, i = I[r++], f = 32 - S, e += i >>> f;\n            }\n            B[s] = e < t ? g + e * D : C;\n          }\n          return B;\n        };\n        return u;\n      }(), T = /* @__PURE__ */ function() {\n        var u = {\n          //methods ending with 2 are for the new byte order used by Lerc2.3 and above.\n          //originalUnstuff is used to unpack Huffman code table. code is duplicated to unstuffx for performance reasons.\n          unstuff: function(E, A, I, a, Q, g, D, B) {\n            var C = (1 << I) - 1, o = 0, r, s = 0, f, e, i, t, F = E.length * 4 - Math.ceil(I * a / 8);\n            if (E[E.length - 1] <<= 8 * F, Q)\n              for (r = 0; r < a; r++)\n                s === 0 && (e = E[o++], s = 32), s >= I ? (f = e >>> s - I & C, s -= I) : (i = I - s, f = (e & C) << i & C, e = E[o++], s = 32 - i, f += e >>> s), A[r] = Q[f];\n            else\n              for (t = Math.ceil((B - g) / D), r = 0; r < a; r++)\n                s === 0 && (e = E[o++], s = 32), s >= I ? (f = e >>> s - I & C, s -= I) : (i = I - s, f = (e & C) << i & C, e = E[o++], s = 32 - i, f += e >>> s), A[r] = f < t ? g + f * D : B;\n          },\n          unstuffLUT: function(E, A, I, a, Q, g) {\n            var D = (1 << A) - 1, B = 0, C = 0, o = 0, r = 0, s = 0, f, e = [], i = E.length * 4 - Math.ceil(A * I / 8);\n            E[E.length - 1] <<= 8 * i;\n            var t = Math.ceil((g - a) / Q);\n            for (C = 0; C < I; C++)\n              r === 0 && (f = E[B++], r = 32), r >= A ? (s = f >>> r - A & D, r -= A) : (o = A - r, s = (f & D) << o & D, f = E[B++], r = 32 - o, s += f >>> r), e[C] = s < t ? a + s * Q : g;\n            return e.unshift(a), e;\n          },\n          unstuff2: function(E, A, I, a, Q, g, D, B) {\n            var C = (1 << I) - 1, o = 0, r, s = 0, f = 0, e, i, t;\n            if (Q)\n              for (r = 0; r < a; r++)\n                s === 0 && (i = E[o++], s = 32, f = 0), s >= I ? (e = i >>> f & C, s -= I, f += I) : (t = I - s, e = i >>> f & C, i = E[o++], s = 32 - t, e |= (i & (1 << t) - 1) << I - t, f = t), A[r] = Q[e];\n            else {\n              var F = Math.ceil((B - g) / D);\n              for (r = 0; r < a; r++)\n                s === 0 && (i = E[o++], s = 32, f = 0), s >= I ? (e = i >>> f & C, s -= I, f += I) : (t = I - s, e = i >>> f & C, i = E[o++], s = 32 - t, e |= (i & (1 << t) - 1) << I - t, f = t), A[r] = e < F ? g + e * D : B;\n            }\n            return A;\n          },\n          unstuffLUT2: function(E, A, I, a, Q, g) {\n            var D = (1 << A) - 1, B = 0, C = 0, o = 0, r = 0, s = 0, f = 0, e, i = [], t = Math.ceil((g - a) / Q);\n            for (C = 0; C < I; C++)\n              r === 0 && (e = E[B++], r = 32, f = 0), r >= A ? (s = e >>> f & D, r -= A, f += A) : (o = A - r, s = e >>> f & D, e = E[B++], r = 32 - o, s |= (e & (1 << o) - 1) << A - o, f = o), i[C] = s < t ? a + s * Q : g;\n            return i.unshift(a), i;\n          },\n          originalUnstuff: function(E, A, I, a) {\n            var Q = (1 << I) - 1, g = 0, D, B = 0, C, o, r, s = E.length * 4 - Math.ceil(I * a / 8);\n            for (E[E.length - 1] <<= 8 * s, D = 0; D < a; D++)\n              B === 0 && (o = E[g++], B = 32), B >= I ? (C = o >>> B - I & Q, B -= I) : (r = I - B, C = (o & Q) << r & Q, o = E[g++], B = 32 - r, C += o >>> B), A[D] = C;\n            return A;\n          },\n          originalUnstuff2: function(E, A, I, a) {\n            var Q = (1 << I) - 1, g = 0, D, B = 0, C = 0, o, r, s;\n            for (D = 0; D < a; D++)\n              B === 0 && (r = E[g++], B = 32, C = 0), B >= I ? (o = r >>> C & Q, B -= I, C += I) : (s = I - B, o = r >>> C & Q, r = E[g++], B = 32 - s, o |= (r & (1 << s) - 1) << I - s, C = s), A[D] = o;\n            return A;\n          }\n        }, L = {\n          HUFFMAN_LUT_BITS_MAX: 12,\n          //use 2^12 lut, treat it like constant\n          computeChecksumFletcher32: function(E) {\n            for (var A = 65535, I = 65535, a = E.length, Q = Math.floor(a / 2), g = 0; Q; ) {\n              var D = Q >= 359 ? 359 : Q;\n              Q -= D;\n              do\n                A += E[g++] << 8, I += A += E[g++];\n              while (--D);\n              A = (A & 65535) + (A >>> 16), I = (I & 65535) + (I >>> 16);\n            }\n            return a & 1 && (I += A += E[g] << 8), A = (A & 65535) + (A >>> 16), I = (I & 65535) + (I >>> 16), (I << 16 | A) >>> 0;\n          },\n          readHeaderInfo: function(E, A) {\n            var I = A.ptr, a = new Uint8Array(E, I, 6), Q = {};\n            if (Q.fileIdentifierString = String.fromCharCode.apply(null, a), Q.fileIdentifierString.lastIndexOf(\"Lerc2\", 0) !== 0)\n              throw \"Unexpected file identifier string (expect Lerc2 ): \" + Q.fileIdentifierString;\n            I += 6;\n            var g = new DataView(E, I, 8), D = g.getInt32(0, !0);\n            Q.fileVersion = D, I += 4, D >= 3 && (Q.checksum = g.getUint32(4, !0), I += 4), g = new DataView(E, I, 12), Q.height = g.getUint32(0, !0), Q.width = g.getUint32(4, !0), I += 8, D >= 4 ? (Q.numDims = g.getUint32(8, !0), I += 4) : Q.numDims = 1, g = new DataView(E, I, 40), Q.numValidPixel = g.getUint32(0, !0), Q.microBlockSize = g.getInt32(4, !0), Q.blobSize = g.getInt32(8, !0), Q.imageType = g.getInt32(12, !0), Q.maxZError = g.getFloat64(16, !0), Q.zMin = g.getFloat64(24, !0), Q.zMax = g.getFloat64(32, !0), I += 40, A.headerInfo = Q, A.ptr = I;\n            var B, C;\n            if (D >= 3 && (C = D >= 4 ? 52 : 48, B = this.computeChecksumFletcher32(new Uint8Array(E, I - C, Q.blobSize - 14)), B !== Q.checksum))\n              throw \"Checksum failed.\";\n            return !0;\n          },\n          checkMinMaxRanges: function(E, A) {\n            var I = A.headerInfo, a = this.getDataTypeArray(I.imageType), Q = I.numDims * this.getDataTypeSize(I.imageType), g = this.readSubArray(E, A.ptr, a, Q), D = this.readSubArray(E, A.ptr + Q, a, Q);\n            A.ptr += 2 * Q;\n            var B, C = !0;\n            for (B = 0; B < I.numDims; B++)\n              if (g[B] !== D[B]) {\n                C = !1;\n                break;\n              }\n            return I.minValues = g, I.maxValues = D, C;\n          },\n          readSubArray: function(E, A, I, a) {\n            var Q;\n            if (I === Uint8Array)\n              Q = new Uint8Array(E, A, a);\n            else {\n              var g = new ArrayBuffer(a), D = new Uint8Array(g);\n              D.set(new Uint8Array(E, A, a)), Q = new I(g);\n            }\n            return Q;\n          },\n          readMask: function(E, A) {\n            var I = A.ptr, a = A.headerInfo, Q = a.width * a.height, g = a.numValidPixel, D = new DataView(E, I, 4), B = {};\n            if (B.numBytes = D.getUint32(0, !0), I += 4, (g === 0 || Q === g) && B.numBytes !== 0)\n              throw \"invalid mask\";\n            var C, o;\n            if (g === 0)\n              C = new Uint8Array(Math.ceil(Q / 8)), B.bitset = C, o = new Uint8Array(Q), A.pixels.resultMask = o, I += B.numBytes;\n            else if (B.numBytes > 0) {\n              C = new Uint8Array(Math.ceil(Q / 8)), D = new DataView(E, I, B.numBytes);\n              var r = D.getInt16(0, !0), s = 2, f = 0, e = 0;\n              do {\n                if (r > 0)\n                  for (; r--; )\n                    C[f++] = D.getUint8(s++);\n                else\n                  for (e = D.getUint8(s++), r = -r; r--; )\n                    C[f++] = e;\n                r = D.getInt16(s, !0), s += 2;\n              } while (s < B.numBytes);\n              if (r !== -32768 || f < C.length)\n                throw \"Unexpected end of mask RLE encoding\";\n              o = new Uint8Array(Q);\n              var i = 0, t = 0;\n              for (t = 0; t < Q; t++)\n                t & 7 ? (i = C[t >> 3], i <<= t & 7) : i = C[t >> 3], i & 128 && (o[t] = 1);\n              A.pixels.resultMask = o, B.bitset = C, I += B.numBytes;\n            }\n            return A.ptr = I, A.mask = B, !0;\n          },\n          readDataOneSweep: function(E, A, I, a) {\n            var Q = A.ptr, g = A.headerInfo, D = g.numDims, B = g.width * g.height, C = g.imageType, o = g.numValidPixel * L.getDataTypeSize(C) * D, r, s = A.pixels.resultMask;\n            if (I === Uint8Array)\n              r = new Uint8Array(E, Q, o);\n            else {\n              var f = new ArrayBuffer(o), e = new Uint8Array(f);\n              e.set(new Uint8Array(E, Q, o)), r = new I(f);\n            }\n            if (r.length === B * D)\n              a ? A.pixels.resultPixels = L.swapDimensionOrder(r, B, D, I, !0) : A.pixels.resultPixels = r;\n            else {\n              A.pixels.resultPixels = new I(B * D);\n              var i = 0, t = 0, F = 0, S = 0;\n              if (D > 1) {\n                if (a) {\n                  for (t = 0; t < B; t++)\n                    if (s[t])\n                      for (S = t, F = 0; F < D; F++, S += B)\n                        A.pixels.resultPixels[S] = r[i++];\n                } else\n                  for (t = 0; t < B; t++)\n                    if (s[t])\n                      for (S = t * D, F = 0; F < D; F++)\n                        A.pixels.resultPixels[S + F] = r[i++];\n              } else\n                for (t = 0; t < B; t++)\n                  s[t] && (A.pixels.resultPixels[t] = r[i++]);\n            }\n            return Q += o, A.ptr = Q, !0;\n          },\n          readHuffmanTree: function(E, A) {\n            var I = this.HUFFMAN_LUT_BITS_MAX, a = new DataView(E, A.ptr, 16);\n            A.ptr += 16;\n            var Q = a.getInt32(0, !0);\n            if (Q < 2)\n              throw \"unsupported Huffman version\";\n            var g = a.getInt32(4, !0), D = a.getInt32(8, !0), B = a.getInt32(12, !0);\n            if (D >= B)\n              return !1;\n            var C = new Uint32Array(B - D);\n            L.decodeBits(E, A, C);\n            var o = [], r, s, f, e;\n            for (r = D; r < B; r++)\n              s = r - (r < g ? 0 : g), o[s] = { first: C[r - D], second: null };\n            var i = E.byteLength - A.ptr, t = Math.ceil(i / 4), F = new ArrayBuffer(t * 4), S = new Uint8Array(F);\n            S.set(new Uint8Array(E, A.ptr, i));\n            var h = new Uint32Array(F), U = 0, G, R = 0;\n            for (G = h[0], r = D; r < B; r++)\n              s = r - (r < g ? 0 : g), e = o[s].first, e > 0 && (o[s].second = G << U >>> 32 - e, 32 - U >= e ? (U += e, U === 32 && (U = 0, R++, G = h[R])) : (U += e - 32, R++, G = h[R], o[s].second |= G >>> 32 - U));\n            var w = 0, n = 0, l = new d();\n            for (r = 0; r < o.length; r++)\n              o[r] !== void 0 && (w = Math.max(w, o[r].first));\n            w >= I ? n = I : n = w;\n            var y = [], k, M, c, N, q, m;\n            for (r = D; r < B; r++)\n              if (s = r - (r < g ? 0 : g), e = o[s].first, e > 0)\n                if (k = [e, s], e <= n)\n                  for (M = o[s].second << n - e, c = 1 << n - e, f = 0; f < c; f++)\n                    y[M | f] = k;\n                else\n                  for (M = o[s].second, m = l, N = e - 1; N >= 0; N--)\n                    q = M >>> N & 1, q ? (m.right || (m.right = new d()), m = m.right) : (m.left || (m.left = new d()), m = m.left), N === 0 && !m.val && (m.val = k[1]);\n            return {\n              decodeLut: y,\n              numBitsLUTQick: n,\n              numBitsLUT: w,\n              tree: l,\n              stuffedData: h,\n              srcPtr: R,\n              bitPos: U\n            };\n          },\n          readHuffman: function(E, A, I, a) {\n            var Q = A.headerInfo, g = Q.numDims, D = A.headerInfo.height, B = A.headerInfo.width, C = B * D, o = this.readHuffmanTree(E, A), r = o.decodeLut, s = o.tree, f = o.stuffedData, e = o.srcPtr, i = o.bitPos, t = o.numBitsLUTQick, F = o.numBitsLUT, S = A.headerInfo.imageType === 0 ? 128 : 0, h, U, G, R = A.pixels.resultMask, w, n, l, y, k, M, c, N = 0;\n            i > 0 && (e++, i = 0);\n            var q = f[e], m = A.encodeMode === 1, O = new I(C * g), v = O, Y;\n            if (g < 2 || m) {\n              for (Y = 0; Y < g; Y++)\n                if (g > 1 && (v = new I(O.buffer, C * Y, C), N = 0), A.headerInfo.numValidPixel === B * D)\n                  for (M = 0, y = 0; y < D; y++)\n                    for (k = 0; k < B; k++, M++) {\n                      if (U = 0, w = q << i >>> 32 - t, n = w, 32 - i < t && (w |= f[e + 1] >>> 64 - i - t, n = w), r[n])\n                        U = r[n][1], i += r[n][0];\n                      else\n                        for (w = q << i >>> 32 - F, n = w, 32 - i < F && (w |= f[e + 1] >>> 64 - i - F, n = w), h = s, c = 0; c < F; c++)\n                          if (l = w >>> F - c - 1 & 1, h = l ? h.right : h.left, !(h.left || h.right)) {\n                            U = h.val, i = i + c + 1;\n                            break;\n                          }\n                      i >= 32 && (i -= 32, e++, q = f[e]), G = U - S, m ? (k > 0 ? G += N : y > 0 ? G += v[M - B] : G += N, G &= 255, v[M] = G, N = G) : v[M] = G;\n                    }\n                else\n                  for (M = 0, y = 0; y < D; y++)\n                    for (k = 0; k < B; k++, M++)\n                      if (R[M]) {\n                        if (U = 0, w = q << i >>> 32 - t, n = w, 32 - i < t && (w |= f[e + 1] >>> 64 - i - t, n = w), r[n])\n                          U = r[n][1], i += r[n][0];\n                        else\n                          for (w = q << i >>> 32 - F, n = w, 32 - i < F && (w |= f[e + 1] >>> 64 - i - F, n = w), h = s, c = 0; c < F; c++)\n                            if (l = w >>> F - c - 1 & 1, h = l ? h.right : h.left, !(h.left || h.right)) {\n                              U = h.val, i = i + c + 1;\n                              break;\n                            }\n                        i >= 32 && (i -= 32, e++, q = f[e]), G = U - S, m ? (k > 0 && R[M - 1] ? G += N : y > 0 && R[M - B] ? G += v[M - B] : G += N, G &= 255, v[M] = G, N = G) : v[M] = G;\n                      }\n            } else\n              for (M = 0, y = 0; y < D; y++)\n                for (k = 0; k < B; k++)\n                  if (M = y * B + k, !R || R[M])\n                    for (Y = 0; Y < g; Y++, M += C) {\n                      if (U = 0, w = q << i >>> 32 - t, n = w, 32 - i < t && (w |= f[e + 1] >>> 64 - i - t, n = w), r[n])\n                        U = r[n][1], i += r[n][0];\n                      else\n                        for (w = q << i >>> 32 - F, n = w, 32 - i < F && (w |= f[e + 1] >>> 64 - i - F, n = w), h = s, c = 0; c < F; c++)\n                          if (l = w >>> F - c - 1 & 1, h = l ? h.right : h.left, !(h.left || h.right)) {\n                            U = h.val, i = i + c + 1;\n                            break;\n                          }\n                      i >= 32 && (i -= 32, e++, q = f[e]), G = U - S, v[M] = G;\n                    }\n            A.ptr = A.ptr + (e + 1) * 4 + (i > 0 ? 4 : 0), A.pixels.resultPixels = O, g > 1 && !a && (A.pixels.resultPixels = L.swapDimensionOrder(O, C, g, I));\n          },\n          decodeBits: function(E, A, I, a, Q) {\n            {\n              var g = A.headerInfo, D = g.fileVersion, B = 0, C = E.byteLength - A.ptr >= 5 ? 5 : E.byteLength - A.ptr, o = new DataView(E, A.ptr, C), r = o.getUint8(0);\n              B++;\n              var s = r >> 6, f = s === 0 ? 4 : 3 - s, e = (r & 32) > 0, i = r & 31, t = 0;\n              if (f === 1)\n                t = o.getUint8(B), B++;\n              else if (f === 2)\n                t = o.getUint16(B, !0), B += 2;\n              else if (f === 4)\n                t = o.getUint32(B, !0), B += 4;\n              else\n                throw \"Invalid valid pixel count type\";\n              var F = 2 * g.maxZError, S, h, U, G, R, w, n, l, y, k = g.numDims > 1 ? g.maxValues[Q] : g.zMax;\n              if (e) {\n                for (A.counter.lut++, l = o.getUint8(B), B++, G = Math.ceil((l - 1) * i / 8), R = Math.ceil(G / 4), h = new ArrayBuffer(R * 4), U = new Uint8Array(h), A.ptr += B, U.set(new Uint8Array(E, A.ptr, G)), n = new Uint32Array(h), A.ptr += G, y = 0; l - 1 >>> y; )\n                  y++;\n                G = Math.ceil(t * y / 8), R = Math.ceil(G / 4), h = new ArrayBuffer(R * 4), U = new Uint8Array(h), U.set(new Uint8Array(E, A.ptr, G)), S = new Uint32Array(h), A.ptr += G, D >= 3 ? w = u.unstuffLUT2(n, i, l - 1, a, F, k) : w = u.unstuffLUT(n, i, l - 1, a, F, k), D >= 3 ? u.unstuff2(S, I, y, t, w) : u.unstuff(S, I, y, t, w);\n              } else\n                A.counter.bitstuffer++, y = i, A.ptr += B, y > 0 && (G = Math.ceil(t * y / 8), R = Math.ceil(G / 4), h = new ArrayBuffer(R * 4), U = new Uint8Array(h), U.set(new Uint8Array(E, A.ptr, G)), S = new Uint32Array(h), A.ptr += G, D >= 3 ? a == null ? u.originalUnstuff2(S, I, y, t) : u.unstuff2(S, I, y, t, !1, a, F, k) : a == null ? u.originalUnstuff(S, I, y, t) : u.unstuff(S, I, y, t, !1, a, F, k));\n            }\n          },\n          readTiles: function(E, A, I, a) {\n            var Q = A.headerInfo, g = Q.width, D = Q.height, B = g * D, C = Q.microBlockSize, o = Q.imageType, r = L.getDataTypeSize(o), s = Math.ceil(g / C), f = Math.ceil(D / C);\n            A.pixels.numBlocksY = f, A.pixels.numBlocksX = s, A.pixels.ptr = 0;\n            var e = 0, i = 0, t = 0, F = 0, S = 0, h = 0, U = 0, G = 0, R = 0, w = 0, n = 0, l = 0, y = 0, k = 0, M = 0, c = 0, N, q, m, O, v, Y, P = new I(C * C), aA = D % C || C, rA = g % C || C, AA, b, $ = Q.numDims, W, K = A.pixels.resultMask, H = A.pixels.resultPixels, oA = Q.fileVersion, EA = oA >= 5 ? 14 : 15, p, IA = Q.zMax, V;\n            for (t = 0; t < f; t++)\n              for (S = t !== f - 1 ? C : aA, F = 0; F < s; F++)\n                for (h = F !== s - 1 ? C : rA, n = t * g * C + F * C, l = g - h, W = 0; W < $; W++) {\n                  if ($ > 1 ? (V = H, n = t * g * C + F * C, H = new I(A.pixels.resultPixels.buffer, B * W * r, B), IA = Q.maxValues[W]) : V = null, U = E.byteLength - A.ptr, N = new DataView(E, A.ptr, Math.min(10, U)), q = {}, c = 0, G = N.getUint8(0), c++, p = Q.fileVersion >= 5 ? G & 4 : 0, R = G >> 6 & 255, w = G >> 2 & EA, w !== (F * C >> 3 & EA) || p && W === 0)\n                    throw \"integrity issue\";\n                  if (Y = G & 3, Y > 3)\n                    throw A.ptr += c, \"Invalid block encoding (\" + Y + \")\";\n                  if (Y === 2) {\n                    if (p)\n                      if (K)\n                        for (e = 0; e < S; e++)\n                          for (i = 0; i < h; i++)\n                            K[n] && (H[n] = V[n]), n++;\n                      else\n                        for (e = 0; e < S; e++)\n                          for (i = 0; i < h; i++)\n                            H[n] = V[n], n++;\n                    A.counter.constant++, A.ptr += c;\n                    continue;\n                  } else if (Y === 0) {\n                    if (p)\n                      throw \"integrity issue\";\n                    if (A.counter.uncompressed++, A.ptr += c, y = S * h * r, k = E.byteLength - A.ptr, y = y < k ? y : k, m = new ArrayBuffer(y % r === 0 ? y : y + r - y % r), O = new Uint8Array(m), O.set(new Uint8Array(E, A.ptr, y)), v = new I(m), M = 0, K)\n                      for (e = 0; e < S; e++) {\n                        for (i = 0; i < h; i++)\n                          K[n] && (H[n] = v[M++]), n++;\n                        n += l;\n                      }\n                    else\n                      for (e = 0; e < S; e++) {\n                        for (i = 0; i < h; i++)\n                          H[n++] = v[M++];\n                        n += l;\n                      }\n                    A.ptr += M * r;\n                  } else if (AA = L.getDataTypeUsed(p && o < 6 ? 4 : o, R), b = L.getOnePixel(q, c, AA, N), c += L.getDataTypeSize(AA), Y === 3)\n                    if (A.ptr += c, A.counter.constantoffset++, K)\n                      for (e = 0; e < S; e++) {\n                        for (i = 0; i < h; i++)\n                          K[n] && (H[n] = p ? Math.min(IA, V[n] + b) : b), n++;\n                        n += l;\n                      }\n                    else\n                      for (e = 0; e < S; e++) {\n                        for (i = 0; i < h; i++)\n                          H[n] = p ? Math.min(IA, V[n] + b) : b, n++;\n                        n += l;\n                      }\n                  else if (A.ptr += c, L.decodeBits(E, A, P, b, W), c = 0, p)\n                    if (K)\n                      for (e = 0; e < S; e++) {\n                        for (i = 0; i < h; i++)\n                          K[n] && (H[n] = P[c++] + V[n]), n++;\n                        n += l;\n                      }\n                    else\n                      for (e = 0; e < S; e++) {\n                        for (i = 0; i < h; i++)\n                          H[n] = P[c++] + V[n], n++;\n                        n += l;\n                      }\n                  else if (K)\n                    for (e = 0; e < S; e++) {\n                      for (i = 0; i < h; i++)\n                        K[n] && (H[n] = P[c++]), n++;\n                      n += l;\n                    }\n                  else\n                    for (e = 0; e < S; e++) {\n                      for (i = 0; i < h; i++)\n                        H[n++] = P[c++];\n                      n += l;\n                    }\n                }\n            $ > 1 && !a && (A.pixels.resultPixels = L.swapDimensionOrder(A.pixels.resultPixels, B, $, I));\n          },\n          /*****************\n          *  private methods (helper methods)\n          *****************/\n          formatFileInfo: function(E) {\n            return {\n              fileIdentifierString: E.headerInfo.fileIdentifierString,\n              fileVersion: E.headerInfo.fileVersion,\n              imageType: E.headerInfo.imageType,\n              height: E.headerInfo.height,\n              width: E.headerInfo.width,\n              numValidPixel: E.headerInfo.numValidPixel,\n              microBlockSize: E.headerInfo.microBlockSize,\n              blobSize: E.headerInfo.blobSize,\n              maxZError: E.headerInfo.maxZError,\n              pixelType: L.getPixelType(E.headerInfo.imageType),\n              eofOffset: E.eofOffset,\n              mask: E.mask ? {\n                numBytes: E.mask.numBytes\n              } : null,\n              pixels: {\n                numBlocksX: E.pixels.numBlocksX,\n                numBlocksY: E.pixels.numBlocksY,\n                //\"numBytes\": data.pixels.numBytes,\n                maxValue: E.headerInfo.zMax,\n                minValue: E.headerInfo.zMin,\n                noDataValue: E.noDataValue\n              }\n            };\n          },\n          constructConstantSurface: function(E, A) {\n            var I = E.headerInfo.zMax, a = E.headerInfo.zMin, Q = E.headerInfo.maxValues, g = E.headerInfo.numDims, D = E.headerInfo.height * E.headerInfo.width, B = 0, C = 0, o = 0, r = E.pixels.resultMask, s = E.pixels.resultPixels;\n            if (r)\n              if (g > 1) {\n                if (A)\n                  for (B = 0; B < g; B++)\n                    for (o = B * D, I = Q[B], C = 0; C < D; C++)\n                      r[C] && (s[o + C] = I);\n                else\n                  for (C = 0; C < D; C++)\n                    if (r[C])\n                      for (o = C * g, B = 0; B < g; B++)\n                        s[o + g] = Q[B];\n              } else\n                for (C = 0; C < D; C++)\n                  r[C] && (s[C] = I);\n            else if (g > 1 && a !== I)\n              if (A)\n                for (B = 0; B < g; B++)\n                  for (o = B * D, I = Q[B], C = 0; C < D; C++)\n                    s[o + C] = I;\n              else\n                for (C = 0; C < D; C++)\n                  for (o = C * g, B = 0; B < g; B++)\n                    s[o + B] = Q[B];\n            else\n              for (C = 0; C < D * g; C++)\n                s[C] = I;\n          },\n          getDataTypeArray: function(E) {\n            var A;\n            switch (E) {\n              case 0:\n                A = Int8Array;\n                break;\n              case 1:\n                A = Uint8Array;\n                break;\n              case 2:\n                A = Int16Array;\n                break;\n              case 3:\n                A = Uint16Array;\n                break;\n              case 4:\n                A = Int32Array;\n                break;\n              case 5:\n                A = Uint32Array;\n                break;\n              case 6:\n                A = Float32Array;\n                break;\n              case 7:\n                A = Float64Array;\n                break;\n              default:\n                A = Float32Array;\n            }\n            return A;\n          },\n          getPixelType: function(E) {\n            var A;\n            switch (E) {\n              case 0:\n                A = \"S8\";\n                break;\n              case 1:\n                A = \"U8\";\n                break;\n              case 2:\n                A = \"S16\";\n                break;\n              case 3:\n                A = \"U16\";\n                break;\n              case 4:\n                A = \"S32\";\n                break;\n              case 5:\n                A = \"U32\";\n                break;\n              case 6:\n                A = \"F32\";\n                break;\n              case 7:\n                A = \"F64\";\n                break;\n              default:\n                A = \"F32\";\n            }\n            return A;\n          },\n          isValidPixelValue: function(E, A) {\n            if (A == null)\n              return !1;\n            var I;\n            switch (E) {\n              case 0:\n                I = A >= -128 && A <= 127;\n                break;\n              case 1:\n                I = A >= 0 && A <= 255;\n                break;\n              case 2:\n                I = A >= -32768 && A <= 32767;\n                break;\n              case 3:\n                I = A >= 0 && A <= 65536;\n                break;\n              case 4:\n                I = A >= -2147483648 && A <= 2147483647;\n                break;\n              case 5:\n                I = A >= 0 && A <= 4294967296;\n                break;\n              case 6:\n                I = A >= -34027999387901484e22 && A <= 34027999387901484e22;\n                break;\n              case 7:\n                I = A >= -17976931348623157e292 && A <= 17976931348623157e292;\n                break;\n              default:\n                I = !1;\n            }\n            return I;\n          },\n          getDataTypeSize: function(E) {\n            var A = 0;\n            switch (E) {\n              case 0:\n              //ubyte\n              case 1:\n                A = 1;\n                break;\n              case 2:\n              //short\n              case 3:\n                A = 2;\n                break;\n              case 4:\n              case 5:\n              case 6:\n                A = 4;\n                break;\n              case 7:\n                A = 8;\n                break;\n              default:\n                A = E;\n            }\n            return A;\n          },\n          getDataTypeUsed: function(E, A) {\n            var I = E;\n            switch (E) {\n              case 2:\n              //short\n              case 4:\n                I = E - A;\n                break;\n              case 3:\n              //ushort\n              case 5:\n                I = E - 2 * A;\n                break;\n              case 6:\n                A === 0 ? I = E : A === 1 ? I = 2 : I = 1;\n                break;\n              case 7:\n                A === 0 ? I = E : I = E - 2 * A + 1;\n                break;\n              default:\n                I = E;\n                break;\n            }\n            return I;\n          },\n          getOnePixel: function(E, A, I, a) {\n            var Q = 0;\n            switch (I) {\n              case 0:\n                Q = a.getInt8(A);\n                break;\n              case 1:\n                Q = a.getUint8(A);\n                break;\n              case 2:\n                Q = a.getInt16(A, !0);\n                break;\n              case 3:\n                Q = a.getUint16(A, !0);\n                break;\n              case 4:\n                Q = a.getInt32(A, !0);\n                break;\n              case 5:\n                Q = a.getUInt32(A, !0);\n                break;\n              case 6:\n                Q = a.getFloat32(A, !0);\n                break;\n              case 7:\n                Q = a.getFloat64(A, !0);\n                break;\n              default:\n                throw \"the decoder does not understand this pixel type\";\n            }\n            return Q;\n          },\n          swapDimensionOrder: function(E, A, I, a, Q) {\n            var g = 0, D = 0, B = 0, C = 0, o = E;\n            if (I > 1)\n              if (o = new a(A * I), Q)\n                for (g = 0; g < A; g++)\n                  for (C = g, B = 0; B < I; B++, C += A)\n                    o[C] = E[D++];\n              else\n                for (g = 0; g < A; g++)\n                  for (C = g, B = 0; B < I; B++, C += A)\n                    o[D++] = E[C];\n            return o;\n          }\n        }, d = function(E, A, I) {\n          this.val = E, this.left = A, this.right = I;\n        }, z = {\n          /*\n          * ********removed options compared to LERC1. We can bring some of them back if needed.\n           * removed pixel type. LERC2 is typed and doesn't require user to give pixel type\n           * changed encodedMaskData to maskData. LERC2 's js version make it faster to use maskData directly.\n           * removed returnMask. mask is used by LERC2 internally and is cost free. In case of user input mask, it's returned as well and has neglible cost.\n           * removed nodatavalue. Because LERC2 pixels are typed, nodatavalue will sacrify a useful value for many types (8bit, 16bit) etc,\n           *       user has to be knowledgable enough about raster and their data to avoid usability issues. so nodata value is simply removed now.\n           *       We can add it back later if their's a clear requirement.\n           * removed encodedMask. This option was not implemented in LercDecode. It can be done after decoding (less efficient)\n           * removed computeUsedBitDepths.\n           *\n           *\n           * response changes compared to LERC1\n           * 1. encodedMaskData is not available\n           * 2. noDataValue is optional (returns only if user's noDataValue is with in the valid data type range)\n           * 3. maskData is always available\n          */\n          /*****************\n          *  public properties\n          ******************/\n          //HUFFMAN_LUT_BITS_MAX: 12, //use 2^12 lut, not configurable\n          /*****************\n          *  public methods\n          *****************/\n          /**\n           * Decode a LERC2 byte stream and return an object containing the pixel data and optional metadata.\n           *\n           * @param {ArrayBuffer} input The LERC input byte stream\n           * @param {object} [options] options Decoding options\n           * @param {number} [options.inputOffset] The number of bytes to skip in the input byte stream. A valid LERC file is expected at that position\n           * @param {boolean} [options.returnFileInfo] If true, the return value will have a fileInfo property that contains metadata obtained from the LERC headers and the decoding process\n           * @param {boolean} [options.returnPixelInterleavedDims]  If true, returned dimensions are pixel-interleaved, a.k.a [p1_dim0, p1_dim1, p1_dimn, p2_dim0...], default is [p1_dim0, p2_dim0, ..., p1_dim1, p2_dim1...]\n           */\n          decode: function(E, A) {\n            A = A || {};\n            var I = A.noDataValue, a = 0, Q = {};\n            if (Q.ptr = A.inputOffset || 0, Q.pixels = {}, !!L.readHeaderInfo(E, Q)) {\n              var g = Q.headerInfo, D = g.fileVersion, B = L.getDataTypeArray(g.imageType);\n              if (D > 5)\n                throw \"unsupported lerc version 2.\" + D;\n              L.readMask(E, Q), g.numValidPixel !== g.width * g.height && !Q.pixels.resultMask && (Q.pixels.resultMask = A.maskData);\n              var C = g.width * g.height;\n              Q.pixels.resultPixels = new B(C * g.numDims), Q.counter = {\n                onesweep: 0,\n                uncompressed: 0,\n                lut: 0,\n                bitstuffer: 0,\n                constant: 0,\n                constantoffset: 0\n              };\n              var o = !A.returnPixelInterleavedDims;\n              if (g.numValidPixel !== 0)\n                if (g.zMax === g.zMin)\n                  L.constructConstantSurface(Q, o);\n                else if (D >= 4 && L.checkMinMaxRanges(E, Q))\n                  L.constructConstantSurface(Q, o);\n                else {\n                  var r = new DataView(E, Q.ptr, 2), s = r.getUint8(0);\n                  if (Q.ptr++, s)\n                    L.readDataOneSweep(E, Q, B, o);\n                  else if (D > 1 && g.imageType <= 1 && Math.abs(g.maxZError - 0.5) < 1e-5) {\n                    var f = r.getUint8(1);\n                    if (Q.ptr++, Q.encodeMode = f, f > 2 || D < 4 && f > 1)\n                      throw \"Invalid Huffman flag \" + f;\n                    f ? L.readHuffman(E, Q, B, o) : L.readTiles(E, Q, B, o);\n                  } else\n                    L.readTiles(E, Q, B, o);\n                }\n              Q.eofOffset = Q.ptr;\n              var e;\n              A.inputOffset ? (e = Q.headerInfo.blobSize + A.inputOffset - Q.ptr, Math.abs(e) >= 1 && (Q.eofOffset = A.inputOffset + Q.headerInfo.blobSize)) : (e = Q.headerInfo.blobSize - Q.ptr, Math.abs(e) >= 1 && (Q.eofOffset = Q.headerInfo.blobSize));\n              var i = {\n                width: g.width,\n                height: g.height,\n                pixelData: Q.pixels.resultPixels,\n                minValue: g.zMin,\n                maxValue: g.zMax,\n                validPixelCount: g.numValidPixel,\n                dimCount: g.numDims,\n                dimStats: {\n                  minValues: g.minValues,\n                  maxValues: g.maxValues\n                },\n                maskData: Q.pixels.resultMask\n                //noDataValue: noDataValue\n              };\n              if (Q.pixels.resultMask && L.isValidPixelValue(g.imageType, I)) {\n                var t = Q.pixels.resultMask;\n                for (a = 0; a < C; a++)\n                  t[a] || (i.pixelData[a] = I);\n                i.noDataValue = I;\n              }\n              return Q.noDataValue = I, A.returnFileInfo && (i.fileInfo = L.formatFileInfo(Q)), i;\n            }\n          },\n          getBandCount: function(E) {\n            var A = 0, I = 0, a = {};\n            for (a.ptr = 0, a.pixels = {}; I < E.byteLength - 58; )\n              L.readHeaderInfo(E, a), I += a.headerInfo.blobSize, A++, a.ptr = I;\n            return A;\n          }\n        };\n        return z;\n      }(), Z = function() {\n        var u = new ArrayBuffer(4), L = new Uint8Array(u), d = new Uint32Array(u);\n        return d[0] = 1, L[0] === 1;\n      }(), X = {\n        /************wrapper**********************************************/\n        /**\n         * A wrapper for decoding both LERC1 and LERC2 byte streams capable of handling multiband pixel blocks for various pixel types.\n         *\n         * @alias module:Lerc\n         * @param {ArrayBuffer} input The LERC input byte stream\n         * @param {object} [options] The decoding options below are optional.\n         * @param {number} [options.inputOffset] The number of bytes to skip in the input byte stream. A valid Lerc file is expected at that position.\n         * @param {string} [options.pixelType] (LERC1 only) Default value is F32. Valid pixel types for input are U8/S8/S16/U16/S32/U32/F32.\n         * @param {number} [options.noDataValue] (LERC1 only). It is recommended to use the returned mask instead of setting this value.\n         * @param {boolean} [options.returnPixelInterleavedDims] (nDim LERC2 only) If true, returned dimensions are pixel-interleaved, a.k.a [p1_dim0, p1_dim1, p1_dimn, p2_dim0...], default is [p1_dim0, p2_dim0, ..., p1_dim1, p2_dim1...]\n         * @returns {{width, height, pixels, pixelType, mask, statistics}}\n           * @property {number} width Width of decoded image.\n           * @property {number} height Height of decoded image.\n           * @property {array} pixels [band1, band2, …] Each band is a typed array of width*height.\n           * @property {string} pixelType The type of pixels represented in the output.\n           * @property {mask} mask Typed array with a size of width*height, or null if all pixels are valid.\n           * @property {array} statistics [statistics_band1, statistics_band2, …] Each element is a statistics object representing min and max values\n        **/\n        decode: function(u, L) {\n          if (!Z)\n            throw \"Big endian system is not supported.\";\n          L = L || {};\n          var d = L.inputOffset || 0, z = new Uint8Array(u, d, 10), E = String.fromCharCode.apply(null, z), A, I;\n          if (E.trim() === \"CntZImage\")\n            A = J, I = 1;\n          else if (E.substring(0, 5) === \"Lerc2\")\n            A = T, I = 2;\n          else\n            throw \"Unexpected file identifier string: \" + E;\n          for (var a = 0, Q = u.byteLength - 10, g, D = [], B, C, o = {\n            width: 0,\n            height: 0,\n            pixels: [],\n            pixelType: L.pixelType,\n            mask: null,\n            statistics: []\n          }, r = 0; d < Q; ) {\n            var s = A.decode(u, {\n              inputOffset: d,\n              //for both lerc1 and lerc2\n              encodedMaskData: g,\n              //lerc1 only\n              maskData: C,\n              //lerc2 only\n              returnMask: a === 0,\n              //lerc1 only\n              returnEncodedMask: a === 0,\n              //lerc1 only\n              returnFileInfo: !0,\n              //for both lerc1 and lerc2\n              returnPixelInterleavedDims: L.returnPixelInterleavedDims,\n              //for ndim lerc2 only\n              pixelType: L.pixelType || null,\n              //lerc1 only\n              noDataValue: L.noDataValue || null\n              //lerc1 only\n            });\n            d = s.fileInfo.eofOffset, C = s.maskData, a === 0 && (g = s.encodedMaskData, o.width = s.width, o.height = s.height, o.dimCount = s.dimCount || 1, o.pixelType = s.pixelType || s.fileInfo.pixelType, o.mask = C), I > 1 && (C && D.push(C), s.fileInfo.mask && s.fileInfo.mask.numBytes > 0 && r++), a++, o.pixels.push(s.pixelData), o.statistics.push({\n              minValue: s.minValue,\n              maxValue: s.maxValue,\n              noDataValue: s.noDataValue,\n              dimStats: s.dimStats\n            });\n          }\n          var f, e, i;\n          if (I > 1 && r > 1) {\n            for (i = o.width * o.height, o.bandMasks = D, C = new Uint8Array(i), C.set(D[0]), f = 1; f < D.length; f++)\n              for (B = D[f], e = 0; e < i; e++)\n                C[e] = C[e] & B[e];\n            o.maskData = C;\n          }\n          return o;\n        }\n      };\n      j.exports ? j.exports = X : this.Lerc = X;\n    })();\n  }(BA)), BA.exports;\n}\nvar wA = tA();\nconst hA = /* @__PURE__ */ DA(wA);\nlet _, x, CA;\nconst QA = {\n  env: {\n    emscripten_notify_memory_growth: function(j) {\n      CA = new Uint8Array(x.exports.memory.buffer);\n    }\n  }\n};\nclass GA {\n  init() {\n    return _ || (typeof fetch < \"u\" ? _ = fetch(\"data:application/wasm;base64,\" + eA).then((J) => J.arrayBuffer()).then((J) => WebAssembly.instantiate(J, QA)).then(this._init) : _ = WebAssembly.instantiate(Buffer.from(eA, \"base64\"), QA).then(this._init), _);\n  }\n  _init(J) {\n    x = J.instance, QA.env.emscripten_notify_memory_growth(0);\n  }\n  decode(J, T = 0) {\n    if (!x) throw new Error(\"ZSTDDecoder: Await .init() before decoding.\");\n    const Z = J.byteLength, X = x.exports.malloc(Z);\n    CA.set(J, X), T = T || Number(x.exports.ZSTD_findDecompressedSize(X, Z));\n    const u = x.exports.malloc(T), L = x.exports.ZSTD_decompress(u, T, X, Z), d = CA.slice(u, u + L);\n    return x.exports.free(X), x.exports.free(u), d;\n  }\n}\nconst eA = \"\", FA = new GA();\nclass kA extends nA {\n  constructor(J) {\n    super(), this.planarConfiguration = typeof J.PlanarConfiguration < \"u\" ? J.PlanarConfiguration : 1, this.samplesPerPixel = typeof J.SamplesPerPixel < \"u\" ? J.SamplesPerPixel : 1, this.addCompression = J.LercParameters[fA.AddCompression];\n  }\n  decodeBlock(J) {\n    switch (this.addCompression) {\n      case gA.None:\n        break;\n      case gA.Deflate:\n        J = sA(new Uint8Array(J)).buffer;\n        break;\n      case gA.Zstandard:\n        J = FA.decode(new Uint8Array(J)).buffer;\n        break;\n      default:\n        throw new Error(`Unsupported LERC additional compression method identifier: ${this.addCompression}`);\n    }\n    return hA.decode(J, { returnPixelInterleavedDims: this.planarConfiguration === 1 }).pixels[0].buffer;\n  }\n}\nexport {\n  kA as default,\n  FA as zstd\n};\n"],"names":["iA","BA","exports","wA","j","J","u","I","a","Q","encodedMaskData","g","E","inputOffset","D","noDataValue","defaultNoDataValue","B","L","pixelType","Float32Array","returnMask","C","width","height","pixelData","resultPixels","minValue","maxValue","pixels","resultMask","maskData","returnEncodedMask","mask","bitset","returnFileInfo","fileInfo","d","computeUsedBitDepths","bitDepths","z","i","t","F","numBlocksX","o","numBlocksY","r","Math","floor","s","f","maxZError","e","Number","MAX_VALUE","Uint8Array","h","U","S","G","R","w","n","M","c","N","q","l","y","k","blocks","encoding","rawData","A","stuffedData","bitsPerPixel","numValidPixels","offset","fileIdentifierString","fileVersion","imageType","eofOffset","numBytes","float32","Object","keys","String","fromCharCode","apply","trim","DataView","getInt32","getUint32","getFloat64","getFloat32","ceil","getInt16","getUint8","length","Array","byteLength","min","offsetType","getInt8","numValidPixelsType","getUint16","ArrayBuffer","set","Uint32Array","T","unshift","HUFFMAN_LUT_BITS_MAX","computeChecksumFletcher32","readHeaderInfo","ptr","lastIndexOf","checksum","numDims","numValidPixel","microBlockSize","blobSize","zMin","zMax","headerInfo","this","checkMinMaxRanges","getDataTypeArray","getDataTypeSize","readSubArray","minValues","maxValues","readMask","readDataOneSweep","swapDimensionOrder","readHuffmanTree","decodeBits","first","second","max","m","right","left","val","decodeLut","numBitsLUTQick","numBitsLUT","tree","srcPtr","bitPos","readHuffman","Y","encodeMode","O","v","buffer","counter","lut","bitstuffer","readTiles","AA","b","W","p","V","P","aA","rA","$","K","H","EA","IA","uncompressed","getDataTypeUsed","getOnePixel","constantoffset","constant","formatFileInfo","getPixelType","constructConstantSurface","Int8Array","Int16Array","Uint16Array","Int32Array","Float64Array","isValidPixelValue","getUInt32","decode","onesweep","returnPixelInterleavedDims","abs","validPixelCount","dimCount","dimStats","getBandCount","Z","X","substring","statistics","push","bandMasks","Lerc","tA","hA","DA","_","x","CA","QA","env","emscripten_notify_memory_growth","memory","eA","FA","init","fetch","then","arrayBuffer","WebAssembly","instantiate","_init","Buffer","from","instance","arguments","undefined","Error","malloc","ZSTD_findDecompressedSize","ZSTD_decompress","slice","free","kA","nA","constructor","super","planarConfiguration","PlanarConfiguration","samplesPerPixel","SamplesPerPixel","addCompression","LercParameters","fA","AddCompression","decodeBlock","gA","None","Deflate","sA","Zstandard"],"sourceRoot":""}